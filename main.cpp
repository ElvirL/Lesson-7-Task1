/*
Задание 1. Симулятор проведения операций
Что нужно сделать
Реализуйте простой симулятор проведения медицинской операции у пациента. Пользователь выступает в роли хирурга, 
который запрашивает инструменты у ассистента и применяет их сообразно ситуации.
Пользователь взаимодействует с программой с помощью команд. Команды не имеют сложной встроенной логики: они просто принимают 
нужные данные в качестве аргументов и выводят сообщения в консоль о выполнении. Данные команд — это одна или две двумерные точки 
в формате double с координатами X и Y соответственно.
Команда scalpel — принимает на вход две двумерные координаты начала и конца разреза или линии отсечения. При выполнении в консоль 
выводится сообщение о том, что был сделан разрез между введёнными координатами.
Команда hemostat принимает на вход одну точку, в которой требуется сделать зажим, о чём также сообщает в консоль.
Команда tweezers — пинцет, как и зажим, принимает одну точку для применения. Сообщение об этом выводится в консоль.
Команда suture — хирургическая игла, которая делает шов между двумя указанными точками.
Операция всегда начинается с команды scalpel и заканчивается командой suture. Для окончания работы программы их параметры-точки должны 
совпасть.
Программу требуется реализовать именно с помощью одного заголовочного файла и одного файла с исходным кодом (CPP). В заголовочном 
файле должны находиться функции-инструменты. В основном файле — основная логика программы, обработка ввода пользователя.

Советы и рекомендации
• Создайте структуру с типом двумерной координаты (точки) вместе с набором функций для ввода этой координаты из консоли, её вывода 
в консоль и сравнения на предмет равенства. Для этих целей удобнее всего создать ещё один заголовочный файл.
• Обратите внимание на порядок команд.
• Заголовочные файлы с расширением .h следует расположить в папке include. Файлы исходного кода с расширением .cpp — в папке src.
*/

#include <iostream>
#include "tools.h"
#include "struct_coordinates.h"

int main(){
    setlocale(LC_ALL, "Russian");

    two_coordianes start_coordinates;
    two_coordianes end_coordinates;
    std::string command;

    while (command != "suture" || !start_coordinates.is_equal(end_coordinates)){
        std::cout<< "Введите команду: " << std::endl;
        std::cin >> command;

        if (command == "scalpel"){
            std::cout << "Введите координаты начала и конца разреза (x1 y1 x2 y2):" << std::endl;
            two_coordianes c;
            c.read_coordinates();
            start_coordinates = c;
            scalpel(c.x1,c.y1,c.x2,c.y2);
        }
        else if (command == "hemostat"){
            std::cout << "Введите координты зажима (x y):" << std::endl;
            one_coordinates c;
            c.read_coordinates();
            hemostat(c.x,c.y);
        }
        else if (command == "tweezers"){
            std::cout << "Введите координаты для пинцета (x y)" << std::endl;
            one_coordinates c;
            c.read_coordinates();
            tweezers(c.x,c.y);
        }
        else if (command == "suture"){
            std::cout << "Введите координаты для шва (x1 y1 x2 y2): " << std::endl;
            two_coordianes c;
            c.read_coordinates();
            end_coordinates = c;
            suture(c.x1,c.y1,c.x2,c.y2);
        }
    }

}